name: Frontend CD

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy Frontend to Azure VM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH & Deploy to Azure VM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key:      ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Update repo
            mkdir -p ~/frontend
            cd ~/frontend

            if [ ! -d ".git" ]; then
              git init
              git remote add origin https://github.com/mrtaz77/career-studio-frontend.git
            fi

            git fetch origin
            git reset --hard origin/main
            
            # Create secrets directory and populate secrets
            echo "Creating secret files for Docker build..."
            mkdir -p ./secrets
            echo "${{ secrets.VITE_FIREBASE_API_KEY }}" > ./secrets/firebase_api_key
            echo "${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" > ./secrets/firebase_auth_domain
            echo "${{ secrets.VITE_FIREBASE_PROJECT_ID }}" > ./secrets/firebase_project_id
            echo "${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" > ./secrets/firebase_storage_bucket
            echo "${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" > ./secrets/firebase_messaging_sender_id
            echo "${{ secrets.VITE_FIREBASE_APP_ID }}" > ./secrets/firebase_app_id
            echo "${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" > ./secrets/firebase_measurement_id
            echo "/api" > ./secrets/api_base_url
            
            # Create network if it doesn't exist
            docker network create backend_app-network 2>/dev/null || true
            
            # Build and start the container locally
            echo "Building and starting container..."
            DOCKER_BUILDKIT=1 docker compose build frontend
            docker compose up -d --force-recreate frontend
            
            # Verify the container is running
            if docker ps | grep -q frontend; then
              echo "✅ Frontend container is running successfully"
            else
              echo "❌ ERROR: Frontend container failed to start!"
              # Show logs to debug
              docker compose logs frontend
              exit 1
            fi
            
            # Clean up unused images
            echo "Cleaning up unused images..."
            docker image prune -f
